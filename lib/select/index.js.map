{"version":3,"sources":["select/index.jsx"],"names":["Select","arguments","selectRef","React","createRef","focus","current","blur","getMode","mode","props","undefined","SECRET_COMBOBOX_MODE_DO_NOT_USE","renderSelect","getContextPopupContainer","getPopupContainer","getPrefixCls","renderEmpty","direction","customizePrefixCls","prefixCls","notFoundContent","className","size","listHeight","listItemHeight","dropdownClassName","isMultiple","mergedNotFound","multiple","suffixIcon","itemIcon","removeIcon","clearIcon","selectProps","mergedClassName","rcSelectRtlDropDownClassName","Component","Option","OptGroup","defaultProps","transitionName","choiceTransitionName"],"mappings":"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","sourcesContent":["// TODO: 4.0 - codemod should help to change `filterOption` to support node props.\nimport * as React from 'react';\nimport omit from 'omit.js';\nimport classNames from 'classnames';\nimport RcSelect, { Option, OptGroup } from 'rc-select';\nimport { ConfigConsumer } from '../config-provider';\nimport getIcons from './utils/iconUtil';\n// We still use class here since `forwardRef` not support generic in typescript\nclass Select extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.selectRef = React.createRef();\n        this.focus = () => {\n            if (this.selectRef.current) {\n                this.selectRef.current.focus();\n            }\n        };\n        this.blur = () => {\n            if (this.selectRef.current) {\n                this.selectRef.current.blur();\n            }\n        };\n        this.getMode = () => {\n            const { mode } = this.props;\n            if (mode === 'combobox') {\n                return undefined;\n            }\n            if (mode === Select.SECRET_COMBOBOX_MODE_DO_NOT_USE) {\n                return 'combobox';\n            }\n            return mode;\n        };\n        this.renderSelect = ({ getPopupContainer: getContextPopupContainer, getPrefixCls, renderEmpty, direction, }) => {\n            const { prefixCls: customizePrefixCls, notFoundContent, className, size, listHeight = 256, listItemHeight = 32, getPopupContainer, dropdownClassName, } = this.props;\n            const prefixCls = getPrefixCls('select', customizePrefixCls);\n            const mode = this.getMode();\n            const isMultiple = mode === 'multiple' || mode === 'tags';\n            // ===================== Empty =====================\n            let mergedNotFound;\n            if (notFoundContent !== undefined) {\n                mergedNotFound = notFoundContent;\n            }\n            else if (mode === 'combobox') {\n                mergedNotFound = null;\n            }\n            else {\n                mergedNotFound = renderEmpty('Select');\n            }\n            // ===================== Icons =====================\n            const { suffixIcon, itemIcon, removeIcon, clearIcon } = getIcons(Object.assign(Object.assign({}, this.props), { multiple: isMultiple }));\n            const selectProps = omit(this.props, [\n                'prefixCls',\n                'suffixIcon',\n                'itemIcon',\n                'removeIcon',\n                'clearIcon',\n                'size',\n            ]);\n            const mergedClassName = classNames(className, {\n                [`${prefixCls}-lg`]: size === 'large',\n                [`${prefixCls}-sm`]: size === 'small',\n                [`${prefixCls}-rtl`]: direction === 'rtl',\n            });\n            const rcSelectRtlDropDownClassName = classNames(dropdownClassName, {\n                [`${prefixCls}-dropdown-${direction}`]: direction === 'rtl',\n            });\n            return (<RcSelect ref={this.selectRef} {...selectProps} listHeight={listHeight} listItemHeight={listItemHeight} mode={mode} prefixCls={prefixCls} inputIcon={suffixIcon} menuItemSelectedIcon={itemIcon} removeIcon={removeIcon} clearIcon={clearIcon} notFoundContent={mergedNotFound} className={mergedClassName} getPopupContainer={getPopupContainer || getContextPopupContainer} dropdownClassName={rcSelectRtlDropDownClassName}/>);\n        };\n    }\n    render() {\n        return <ConfigConsumer>{this.renderSelect}</ConfigConsumer>;\n    }\n}\nSelect.Option = Option;\nSelect.OptGroup = OptGroup;\nSelect.SECRET_COMBOBOX_MODE_DO_NOT_USE = 'SECRET_COMBOBOX_MODE_DO_NOT_USE';\nSelect.defaultProps = {\n    transitionName: 'slide-up',\n    choiceTransitionName: 'zoom',\n};\nexport default Select;\n"],"file":"index.js"}