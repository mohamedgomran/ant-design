{"version":3,"sources":["form/Form.jsx"],"names":["InternalForm","props","ref","React","useContext","ConfigContext","getPrefixCls","direction","form","colon","name","labelAlign","labelCol","wrapperCol","customizePrefixCls","prefixCls","hideRequiredMark","className","layout","formClassName","formProps","wrapForm","__INTERNAL__","useImperativeHandle","vertical","Form","forwardRef"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;AACA,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAQC,GAAR,EAAgB;AAAA;;AAAA,0BACGC,KAAK,CAACC,UAAN,CAAiBC,6BAAjB,CADH;AAAA,MACzBC,YADyB,qBACzBA,YADyB;AAAA,MACXC,SADW,qBACXA,SADW;;AAAA,MAEzBC,IAFyB,GAEwHP,KAFxH,CAEzBO,IAFyB;AAAA,MAEnBC,KAFmB,GAEwHR,KAFxH,CAEnBQ,KAFmB;AAAA,MAEZC,IAFY,GAEwHT,KAFxH,CAEZS,IAFY;AAAA,MAENC,UAFM,GAEwHV,KAFxH,CAENU,UAFM;AAAA,MAEMC,QAFN,GAEwHX,KAFxH,CAEMW,QAFN;AAAA,MAEgBC,UAFhB,GAEwHZ,KAFxH,CAEgBY,UAFhB;AAAA,MAEuCC,kBAFvC,GAEwHb,KAFxH,CAE4Bc,SAF5B;AAAA,MAE2DC,gBAF3D,GAEwHf,KAFxH,CAE2De,gBAF3D;AAAA,yBAEwHf,KAFxH,CAE6EgB,SAF7E;AAAA,MAE6EA,SAF7E,iCAEyF,EAFzF;AAAA,sBAEwHhB,KAFxH,CAE6FiB,MAF7F;AAAA,MAE6FA,MAF7F,8BAEsG,YAFtG;AAGjC,MAAMH,SAAS,GAAGT,YAAY,CAAC,MAAD,EAASQ,kBAAT,CAA9B;AACA,MAAMK,aAAa,GAAG,4BAAWJ,SAAX,4DACdA,SADc,cACDG,MADC,GACU,IADV,0CAEdH,SAFc,0BAEmBC,gBAFnB,0CAGdD,SAHc,WAGIR,SAAS,KAAK,KAHlB,iBAInBU,SAJmB,CAAtB;AAKA,MAAMG,SAAS,GAAG,sBAAKnB,KAAL,EAAY,CAC1B,WAD0B,EAE1B,WAF0B,EAG1B,QAH0B,EAI1B,kBAJ0B,EAK1B,YAL0B,EAM1B,YAN0B,EAO1B,UAP0B,EAQ1B,OAR0B,CAAZ,CAAlB;;AATiC,iBAmBd,mBAAQO,IAAR,CAnBc;AAAA;AAAA,MAmB1Ba,QAnB0B;;AAoBjCA,EAAAA,QAAQ,CAACC,YAAT,CAAsBZ,IAAtB,GAA6BA,IAA7B;AACAP,EAAAA,KAAK,CAACoB,mBAAN,CAA0BrB,GAA1B,EAA+B;AAAA,WAAMmB,QAAN;AAAA,GAA/B;AACA,SAAQ,oBAAC,oBAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AACjCX,MAAAA,IAAI,EAAJA,IADiC;AAEjCC,MAAAA,UAAU,EAAVA,UAFiC;AAGjCC,MAAAA,QAAQ,EAARA,QAHiC;AAIjCC,MAAAA,UAAU,EAAVA,UAJiC;AAKjCW,MAAAA,QAAQ,EAAEN,MAAM,KAAK,UALY;AAMjCT,MAAAA,KAAK,EAALA;AANiC;AAA7B,KAQN,oBAAC,uBAAD;AAAW,IAAA,EAAE,EAAEC;AAAf,KAAyBU,SAAzB;AAAoC,IAAA,IAAI,EAAEC,QAA1C;AAAoD,IAAA,SAAS,EAAEF;AAA/D,KARM,CAAR;AAUH,CAhCD;;AAiCA,IAAMM,IAAI,GAAGtB,KAAK,CAACuB,UAAN,CAAiB1B,YAAjB,CAAb;eAEeyB,I","sourcesContent":["import * as React from 'react';\nimport omit from 'omit.js';\nimport classNames from 'classnames';\nimport FieldForm, { List } from 'rc-field-form';\nimport { ConfigContext } from '../config-provider';\nimport { FormContext } from './context';\nimport { useForm } from './util';\nconst InternalForm = (props, ref) => {\n    const { getPrefixCls, direction } = React.useContext(ConfigContext);\n    const { form, colon, name, labelAlign, labelCol, wrapperCol, prefixCls: customizePrefixCls, hideRequiredMark, className = '', layout = 'horizontal', } = props;\n    const prefixCls = getPrefixCls('form', customizePrefixCls);\n    const formClassName = classNames(prefixCls, {\n        [`${prefixCls}-${layout}`]: true,\n        [`${prefixCls}-hide-required-mark`]: hideRequiredMark,\n        [`${prefixCls}-rtl`]: direction === 'rtl',\n    }, className);\n    const formProps = omit(props, [\n        'prefixCls',\n        'className',\n        'layout',\n        'hideRequiredMark',\n        'wrapperCol',\n        'labelAlign',\n        'labelCol',\n        'colon',\n    ]);\n    const [wrapForm] = useForm(form);\n    wrapForm.__INTERNAL__.name = name;\n    React.useImperativeHandle(ref, () => wrapForm);\n    return (<FormContext.Provider value={{\n        name,\n        labelAlign,\n        labelCol,\n        wrapperCol,\n        vertical: layout === 'vertical',\n        colon,\n    }}>\n      <FieldForm id={name} {...formProps} form={wrapForm} className={formClassName}/>\n    </FormContext.Provider>);\n};\nconst Form = React.forwardRef(InternalForm);\nexport { useForm, List };\nexport default Form;\n"],"file":"Form.js"}