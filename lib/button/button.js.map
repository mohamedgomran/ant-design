{"version":3,"sources":["button/button.jsx"],"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","rxTwoCNChar","isTwoCNChar","test","bind","isString","str","insertSpace","child","needInserted","SPACE","type","props","children","React","cloneElement","split","join","spaceChildren","isPrevChildPure","childList","Children","forEach","isCurrentChildPure","lastIndex","lastChild","push","map","ButtonTypes","ButtonShapes","ButtonSizes","ButtonHTMLTypes","Button","saveButtonRef","node","buttonNode","handleClick","loading","state","onClick","renderButton","getPrefixCls","autoInsertSpaceInButton","direction","_a","customizePrefixCls","prefixCls","danger","shape","size","className","icon","ghost","block","rest","hasTwoCNChar","autoInsertSpace","sizeCls","iconType","classes","iconNode","kids","isNeedInserted","linkButtonRestProps","href","undefined","_b","htmlType","otherProps","fixTwoCNChar","prevProps","clearTimeout","delayTimeout","delay","window","setTimeout","setState","buttonText","textContent","innerText","count","Component","__ANT_BUTTON","defaultProps"],"mappings":"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","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\n/* eslint-disable react/button-has-type */\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport omit from 'omit.js';\nimport { ConfigConsumer } from '../config-provider';\nimport Wave from '../_util/wave';\nimport { tuple } from '../_util/type';\nimport warning from '../_util/warning';\nconst rxTwoCNChar = /^[\\u4e00-\\u9fa5]{2}$/;\nconst isTwoCNChar = rxTwoCNChar.test.bind(rxTwoCNChar);\nfunction isString(str) {\n    return typeof str === 'string';\n}\n// Insert one space between two chinese characters automatically.\nfunction insertSpace(child, needInserted) {\n    // Check the child if is undefined or null.\n    if (child == null) {\n        return;\n    }\n    const SPACE = needInserted ? ' ' : '';\n    // strictNullChecks oops.\n    if (typeof child !== 'string' &&\n        typeof child !== 'number' &&\n        isString(child.type) &&\n        isTwoCNChar(child.props.children)) {\n        return React.cloneElement(child, {}, child.props.children.split('').join(SPACE));\n    }\n    if (typeof child === 'string') {\n        if (isTwoCNChar(child)) {\n            child = child.split('').join(SPACE);\n        }\n        return <span>{child}</span>;\n    }\n    return child;\n}\nfunction spaceChildren(children, needInserted) {\n    let isPrevChildPure = false;\n    const childList = [];\n    React.Children.forEach(children, child => {\n        const type = typeof child;\n        const isCurrentChildPure = type === 'string' || type === 'number';\n        if (isPrevChildPure && isCurrentChildPure) {\n            const lastIndex = childList.length - 1;\n            const lastChild = childList[lastIndex];\n            childList[lastIndex] = `${lastChild}${child}`;\n        }\n        else {\n            childList.push(child);\n        }\n        isPrevChildPure = isCurrentChildPure;\n    });\n    // Pass to React.Children.map to auto fill key\n    return React.Children.map(childList, child => insertSpace(child, needInserted));\n}\nconst ButtonTypes = tuple('default', 'primary', 'ghost', 'dashed', 'danger', 'link');\nconst ButtonShapes = tuple('circle', 'circle-outline', 'round');\nconst ButtonSizes = tuple('large', 'default', 'small');\nconst ButtonHTMLTypes = tuple('submit', 'button', 'reset');\nclass Button extends React.Component {\n    constructor(props) {\n        super(props);\n        this.saveButtonRef = (node) => {\n            this.buttonNode = node;\n        };\n        this.handleClick = e => {\n            const { loading } = this.state;\n            const { onClick } = this.props;\n            if (loading) {\n                return;\n            }\n            if (onClick) {\n                onClick(e);\n            }\n        };\n        this.renderButton = ({ getPrefixCls, autoInsertSpaceInButton, direction }) => {\n            const _a = this.props, { prefixCls: customizePrefixCls, type, danger, shape, size, className, children, icon, ghost, block } = _a, rest = __rest(_a, [\"prefixCls\", \"type\", \"danger\", \"shape\", \"size\", \"className\", \"children\", \"icon\", \"ghost\", \"block\"]);\n            const { loading, hasTwoCNChar } = this.state;\n            warning(!(typeof icon === 'string' && icon.length > 2), 'Button', `\\`icon\\` is using ReactNode instead of string naming in v4. Please check \\`${icon}\\` at https://ant.design/components/icon`);\n            const prefixCls = getPrefixCls('btn', customizePrefixCls);\n            const autoInsertSpace = autoInsertSpaceInButton !== false;\n            // large => lg\n            // small => sm\n            let sizeCls = '';\n            switch (size) {\n                case 'large':\n                    sizeCls = 'lg';\n                    break;\n                case 'small':\n                    sizeCls = 'sm';\n                    break;\n                default:\n                    break;\n            }\n            const iconType = loading ? 'loading' : icon;\n            const classes = classNames(prefixCls, className, {\n                [`${prefixCls}-${type}`]: type,\n                [`${prefixCls}-${shape}`]: shape,\n                [`${prefixCls}-${sizeCls}`]: sizeCls,\n                [`${prefixCls}-icon-only`]: !children && children !== 0 && iconType,\n                [`${prefixCls}-loading`]: !!loading,\n                [`${prefixCls}-background-ghost`]: ghost,\n                [`${prefixCls}-two-chinese-chars`]: hasTwoCNChar && autoInsertSpace,\n                [`${prefixCls}-block`]: block,\n                [`${prefixCls}-dangerous`]: !!danger,\n                [`${prefixCls}-rtl`]: direction === 'rtl',\n            });\n            const iconNode = loading ? <LoadingOutlined /> : icon || null;\n            const kids = children || children === 0\n                ? spaceChildren(children, this.isNeedInserted() && autoInsertSpace)\n                : null;\n            const linkButtonRestProps = omit(rest, ['htmlType', 'loading']);\n            if (linkButtonRestProps.href !== undefined) {\n                return (<a {...linkButtonRestProps} className={classes} onClick={this.handleClick} ref={this.saveButtonRef}>\n          {iconNode}\n          {kids}\n        </a>);\n            }\n            // React does not recognize the `htmlType` prop on a DOM element. Here we pick it out of `rest`.\n            const _b = rest, { htmlType } = _b, otherProps = __rest(_b, [\"htmlType\"]);\n            const buttonNode = (<button {...omit(otherProps, ['loading'])} type={htmlType} className={classes} onClick={this.handleClick} ref={this.saveButtonRef}>\n        {iconNode}\n        {kids}\n      </button>);\n            if (type === 'link') {\n                return buttonNode;\n            }\n            return <Wave>{buttonNode}</Wave>;\n        };\n        this.state = {\n            loading: props.loading,\n            hasTwoCNChar: false,\n        };\n    }\n    componentDidMount() {\n        this.fixTwoCNChar();\n    }\n    componentDidUpdate(prevProps) {\n        this.fixTwoCNChar();\n        if (prevProps.loading && typeof prevProps.loading !== 'boolean') {\n            clearTimeout(this.delayTimeout);\n        }\n        const { loading } = this.props;\n        if (loading && typeof loading !== 'boolean' && loading.delay) {\n            this.delayTimeout = window.setTimeout(() => {\n                this.setState({ loading });\n            }, loading.delay);\n        }\n        else if (prevProps.loading !== loading) {\n            // eslint-disable-next-line react/no-did-update-set-state\n            this.setState({ loading });\n        }\n    }\n    componentWillUnmount() {\n        if (this.delayTimeout) {\n            clearTimeout(this.delayTimeout);\n        }\n    }\n    fixTwoCNChar() {\n        // Fix for HOC usage like <FormatMessage />\n        if (!this.buttonNode) {\n            return;\n        }\n        const buttonText = this.buttonNode.textContent || this.buttonNode.innerText;\n        if (this.isNeedInserted() && isTwoCNChar(buttonText)) {\n            if (!this.state.hasTwoCNChar) {\n                this.setState({\n                    hasTwoCNChar: true,\n                });\n            }\n        }\n        else if (this.state.hasTwoCNChar) {\n            this.setState({\n                hasTwoCNChar: false,\n            });\n        }\n    }\n    isNeedInserted() {\n        const { icon, children, type } = this.props;\n        return React.Children.count(children) === 1 && !icon && type !== 'link';\n    }\n    render() {\n        return <ConfigConsumer>{this.renderButton}</ConfigConsumer>;\n    }\n}\nButton.__ANT_BUTTON = true;\nButton.defaultProps = {\n    loading: false,\n    ghost: false,\n    block: false,\n    htmlType: 'button',\n};\nexport default Button;\n"],"file":"button.js"}