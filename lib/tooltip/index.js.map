{"version":3,"sources":["tooltip/index.jsx"],"names":["splitObject","obj","keys","picked","omitted","forEach","key","getDisabledCompatibleChildren","element","elementType","type","__ANT_BUTTON","__ANT_SWITCH","__ANT_CHECKBOX","props","disabled","style","spanStyle","display","cursor","width","block","buttonStyle","pointerEvents","child","React","cloneElement","className","Tooltip","onVisibleChange","visible","setState","isNoTitle","saveTooltip","node","tooltip","onPopupAlign","domNode","align","placements","getPlacements","placement","Object","filter","points","rect","getBoundingClientRect","transformOrigin","top","left","indexOf","height","offset","renderTooltip","getContextPopupContainer","getPopupContainer","getPrefixCls","direction","state","customizePrefixCls","prefixCls","title","overlay","openClassName","getTooltipContainer","overlayClassName","children","isValidElement","childProps","childCls","customOverlayClassName","defaultVisible","getPopupDomNode","builtinPlacements","arrowPointAtCenter","autoAdjustOverflow","verticalArrowShift","nextProps","Component","defaultProps","transitionName","mouseEnterDelay","mouseLeaveDelay"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport RcTooltip from 'rc-tooltip';\nimport classNames from 'classnames';\nimport getPlacements from './placements';\nimport { ConfigConsumer } from '../config-provider';\nconst splitObject = (obj, keys) => {\n    const picked = {};\n    const omitted = Object.assign({}, obj);\n    keys.forEach(key => {\n        if (obj && key in obj) {\n            picked[key] = obj[key];\n            delete omitted[key];\n        }\n    });\n    return { picked, omitted };\n};\n// Fix Tooltip won't hide at disabled button\n// mouse events don't trigger at disabled button in Chrome\n// https://github.com/react-component/tooltip/issues/18\nfunction getDisabledCompatibleChildren(element) {\n    const elementType = element.type;\n    if ((elementType.__ANT_BUTTON === true ||\n        elementType.__ANT_SWITCH === true ||\n        elementType.__ANT_CHECKBOX === true ||\n        element.type === 'button') &&\n        element.props.disabled) {\n        // Pick some layout related style properties up to span\n        // Prevent layout bugs like https://github.com/ant-design/ant-design/issues/5254\n        const { picked, omitted } = splitObject(element.props.style, [\n            'position',\n            'left',\n            'right',\n            'top',\n            'bottom',\n            'float',\n            'display',\n            'zIndex',\n        ]);\n        const spanStyle = Object.assign(Object.assign({ display: 'inline-block' }, picked), { cursor: 'not-allowed', width: element.props.block ? '100%' : null });\n        const buttonStyle = Object.assign(Object.assign({}, omitted), { pointerEvents: 'none' });\n        const child = React.cloneElement(element, {\n            style: buttonStyle,\n            className: null,\n        });\n        return (<span style={spanStyle} className={element.props.className}>\n        {child}\n      </span>);\n    }\n    return element;\n}\nclass Tooltip extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onVisibleChange = (visible) => {\n            const { onVisibleChange } = this.props;\n            if (!('visible' in this.props)) {\n                this.setState({ visible: this.isNoTitle() ? false : visible });\n            }\n            if (onVisibleChange && !this.isNoTitle()) {\n                onVisibleChange(visible);\n            }\n        };\n        this.saveTooltip = (node) => {\n            this.tooltip = node;\n        };\n        // 动态设置动画点\n        this.onPopupAlign = (domNode, align) => {\n            const placements = this.getPlacements();\n            // 当前返回的位置\n            const placement = Object.keys(placements).filter(key => placements[key].points[0] === align.points[0] &&\n                placements[key].points[1] === align.points[1])[0];\n            if (!placement) {\n                return;\n            }\n            // 根据当前坐标设置动画点\n            const rect = domNode.getBoundingClientRect();\n            const transformOrigin = {\n                top: '50%',\n                left: '50%',\n            };\n            if (placement.indexOf('top') >= 0 || placement.indexOf('Bottom') >= 0) {\n                transformOrigin.top = `${rect.height - align.offset[1]}px`;\n            }\n            else if (placement.indexOf('Top') >= 0 || placement.indexOf('bottom') >= 0) {\n                transformOrigin.top = `${-align.offset[1]}px`;\n            }\n            if (placement.indexOf('left') >= 0 || placement.indexOf('Right') >= 0) {\n                transformOrigin.left = `${rect.width - align.offset[0]}px`;\n            }\n            else if (placement.indexOf('right') >= 0 || placement.indexOf('Left') >= 0) {\n                transformOrigin.left = `${-align.offset[0]}px`;\n            }\n            domNode.style.transformOrigin = `${transformOrigin.left} ${transformOrigin.top}`;\n        };\n        this.renderTooltip = ({ getPopupContainer: getContextPopupContainer, getPrefixCls, direction, }) => {\n            const { props, state } = this;\n            const { prefixCls: customizePrefixCls, title, overlay, openClassName, getPopupContainer, getTooltipContainer, overlayClassName, } = props;\n            const children = props.children;\n            const prefixCls = getPrefixCls('tooltip', customizePrefixCls);\n            let { visible } = state;\n            // Hide tooltip when there is no title\n            if (!('visible' in props) && this.isNoTitle()) {\n                visible = false;\n            }\n            const child = getDisabledCompatibleChildren(React.isValidElement(children) ? children : <span>{children}</span>);\n            const childProps = child.props;\n            const childCls = classNames(childProps.className, {\n                [openClassName || `${prefixCls}-open`]: true,\n            });\n            const customOverlayClassName = classNames(overlayClassName, {\n                [`${prefixCls}-rtl`]: direction === 'rtl',\n            });\n            return (<RcTooltip {...this.props} prefixCls={prefixCls} overlayClassName={customOverlayClassName} getTooltipContainer={getPopupContainer || getTooltipContainer || getContextPopupContainer} ref={this.saveTooltip} builtinPlacements={this.getPlacements()} overlay={overlay || title || ''} visible={visible} onVisibleChange={this.onVisibleChange} onPopupAlign={this.onPopupAlign}>\n        {visible ? React.cloneElement(child, { className: childCls }) : child}\n      </RcTooltip>);\n        };\n        this.state = {\n            visible: !!props.visible || !!props.defaultVisible,\n        };\n    }\n    static getDerivedStateFromProps(nextProps) {\n        if ('visible' in nextProps) {\n            return { visible: nextProps.visible };\n        }\n        return null;\n    }\n    getPopupDomNode() {\n        return this.tooltip.getPopupDomNode();\n    }\n    getPlacements() {\n        const { builtinPlacements, arrowPointAtCenter, autoAdjustOverflow } = this.props;\n        return (builtinPlacements ||\n            getPlacements({\n                arrowPointAtCenter,\n                verticalArrowShift: 8,\n                autoAdjustOverflow,\n            }));\n    }\n    isNoTitle() {\n        const { title, overlay } = this.props;\n        return !title && !overlay; // overlay for old version compatibility\n    }\n    render() {\n        return <ConfigConsumer>{this.renderTooltip}</ConfigConsumer>;\n    }\n}\nTooltip.defaultProps = {\n    placement: 'top',\n    transitionName: 'zoom-big-fast',\n    mouseEnterDelay: 0.1,\n    mouseLeaveDelay: 0.1,\n    arrowPointAtCenter: false,\n    autoAdjustOverflow: true,\n};\nexport default Tooltip;\n"],"file":"index.js"}