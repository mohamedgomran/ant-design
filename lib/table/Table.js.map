{"version":3,"sources":["table/Table.jsx"],"names":["EMPTY_LIST","Table","props","customizePrefixCls","prefixCls","className","size","bordered","dropdownPrefixCls","dataSource","pagination","rowSelection","rowKey","rowClassName","columns","onChange","getPopupContainer","loading","expandIcon","expandable","expandedRowRender","indentSize","childrenColumnName","scroll","sortDirections","locale","React","useContext","ConfigContext","contextLocale","defaultLocale","renderEmpty","direction","tableLocale","rawData","getPrefixCls","expandType","useMemo","some","item","internalRefs","body","useRef","getRowKey","record","getRecordByKey","changeEventInfo","triggerOnChange","info","reset","changeInfo","resetPagination","current","pageSize","scrollToFirstRowOnChange","getContainer","filters","sorter","currentDataSource","sorterStates","filterStates","onSorterChange","transformSorterColumns","sortStates","sorterTitleProps","getSorters","sortedData","onFilterChange","transformFilterColumns","getFilters","mergedData","columnTitleProps","transformTitleColumns","onPaginationChange","length","mergedPagination","pageData","total","DEFAULT_PAGE_SIZE","currentPageData","slice","data","transformSelectionColumns","selectedKeySet","internalRowClassName","index","indent","mergedRowClassName","has","mergedExpandable","expandIconColumnIndex","transformColumns","useCallback","innerColumns","topPaginationNode","bottomPaginationNode","paginationSize","undefined","renderPagination","position","spinProps","spinning","wrapperClassNames","e","preventDefault","INTERNAL_HOOKS","defaultProps","SELECTION_ALL","SELECTION_INVERT","Column","ColumnGroup"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\nimport RcTable, { Column, ColumnGroup } from 'rc-table';\nimport { INTERNAL_HOOKS } from 'rc-table/lib/Table';\nimport Spin from '../spin';\nimport Pagination from '../pagination';\nimport { ConfigContext } from '../config-provider/context';\nimport usePagination, { DEFAULT_PAGE_SIZE, getPaginationParam } from './hooks/usePagination';\nimport useLazyKVMap from './hooks/useLazyKVMap';\nimport useSelection, { SELECTION_ALL, SELECTION_INVERT } from './hooks/useSelection';\nimport useSorter, { getSortData } from './hooks/useSorter';\nimport useFilter, { getFilterData } from './hooks/useFilter';\nimport useTitleColumns from './hooks/useTitleColumns';\nimport renderExpandIcon from './ExpandIcon';\nimport scrollTo from '../_util/scrollTo';\nimport defaultLocale from '../locale/en_US';\nconst EMPTY_LIST = [];\nfunction Table(props) {\n    const { prefixCls: customizePrefixCls, className, size, bordered, dropdownPrefixCls, dataSource, pagination, rowSelection, rowKey, rowClassName, columns, onChange, getPopupContainer, loading, expandIcon, expandable, expandedRowRender, indentSize, childrenColumnName = 'children', scroll, sortDirections, locale, } = props;\n    const { locale: contextLocale = defaultLocale, renderEmpty, direction } = React.useContext(ConfigContext);\n    const tableLocale = locale || contextLocale.Table;\n    const rawData = dataSource || EMPTY_LIST;\n    const { getPrefixCls } = React.useContext(ConfigContext);\n    const prefixCls = getPrefixCls('table', customizePrefixCls);\n    const expandType = React.useMemo(() => {\n        if (rawData.some(item => item[childrenColumnName])) {\n            return 'nest';\n        }\n        if (expandedRowRender || (expandable && expandable.expandedRowRender)) {\n            return 'row';\n        }\n        return null;\n    }, [rawData]);\n    const internalRefs = {\n        body: React.useRef(),\n    };\n    // ============================ RowKey ============================\n    const getRowKey = React.useMemo(() => {\n        if (typeof rowKey === 'function') {\n            return rowKey;\n        }\n        return (record) => record[rowKey];\n    }, [rowKey]);\n    const [getRecordByKey] = useLazyKVMap(rawData, childrenColumnName, getRowKey);\n    // ============================ Events =============================\n    const changeEventInfo = {};\n    const triggerOnChange = (info, reset = false) => {\n        const changeInfo = Object.assign(Object.assign({}, changeEventInfo), info);\n        if (reset) {\n            changeEventInfo.resetPagination();\n            // Reset event param\n            if (changeInfo.pagination.current) {\n                changeInfo.pagination.current = 1;\n            }\n            // Trigger pagination events\n            if (pagination && pagination.onChange) {\n                pagination.onChange(1, changeInfo.pagination.pageSize);\n            }\n        }\n        if (scroll && scroll.scrollToFirstRowOnChange !== false && internalRefs.body.current) {\n            scrollTo(0, {\n                getContainer: () => internalRefs.body.current,\n            });\n        }\n        if (onChange) {\n            onChange(changeInfo.pagination, changeInfo.filters, changeInfo.sorter, {\n                currentDataSource: getFilterData(getSortData(rawData, changeInfo.sorterStates, childrenColumnName), changeInfo.filterStates),\n            });\n        }\n    };\n    /**\n     * Controlled state in `columns` is not a good idea that makes too many code (1000+ line?)\n     * to read state out and then put it back to title render.\n     * Move these code into `hooks` but still too complex.\n     * We should provides Table props like `sorter` & `filter` to handle control in next big version.\n     */\n    // ============================ Sorter =============================\n    const onSorterChange = (sorter, sorterStates) => {\n        triggerOnChange({\n            sorter,\n            sorterStates,\n        }, false);\n    };\n    const [transformSorterColumns, sortStates, sorterTitleProps, getSorters] = useSorter({\n        prefixCls,\n        columns: columns || [],\n        onSorterChange,\n        sortDirections: sortDirections || ['ascend', 'descend'],\n    });\n    const sortedData = React.useMemo(() => getSortData(rawData, sortStates, childrenColumnName), [\n        rawData,\n        sortStates,\n    ]);\n    changeEventInfo.sorter = getSorters();\n    changeEventInfo.sorterStates = sortStates;\n    // ============================ Filter ============================\n    const onFilterChange = (filters, filterStates) => {\n        triggerOnChange({\n            filters,\n            filterStates,\n        }, true);\n    };\n    const [transformFilterColumns, filterStates, getFilters] = useFilter({\n        prefixCls,\n        dropdownPrefixCls,\n        columns: columns || [],\n        onFilterChange,\n        getPopupContainer,\n    });\n    const mergedData = getFilterData(sortedData, filterStates);\n    changeEventInfo.filters = getFilters();\n    changeEventInfo.filterStates = filterStates;\n    // ============================ Column ============================\n    const columnTitleProps = React.useMemo(() => (Object.assign({}, sorterTitleProps)), [sorterTitleProps]);\n    const [transformTitleColumns] = useTitleColumns(columnTitleProps);\n    // ========================== Pagination ==========================\n    const onPaginationChange = (current, pageSize) => {\n        triggerOnChange({\n            pagination: Object.assign(Object.assign({}, changeEventInfo.pagination), { current, pageSize }),\n        });\n    };\n    const [mergedPagination, resetPagination] = usePagination(mergedData.length, pagination, onPaginationChange);\n    changeEventInfo.pagination =\n        pagination === false ? {} : getPaginationParam(pagination, mergedPagination);\n    changeEventInfo.resetPagination = resetPagination;\n    // ============================= Data =============================\n    const pageData = React.useMemo(() => {\n        if (pagination === false ||\n            !mergedPagination.pageSize ||\n            mergedData.length < mergedPagination.total) {\n            return mergedData;\n        }\n        const { current = 1, pageSize = DEFAULT_PAGE_SIZE } = mergedPagination;\n        const currentPageData = mergedData.slice((current - 1) * pageSize, current * pageSize);\n        return currentPageData;\n    }, [\n        !!pagination,\n        mergedData,\n        mergedPagination && mergedPagination.current,\n        mergedPagination && mergedPagination.pageSize,\n        mergedPagination && mergedPagination.total,\n    ]);\n    // ========================== Selections ==========================\n    const [transformSelectionColumns, selectedKeySet] = useSelection(rowSelection, {\n        prefixCls,\n        data: mergedData,\n        pageData,\n        getRowKey,\n        getRecordByKey,\n        expandType,\n        childrenColumnName,\n    });\n    const internalRowClassName = (record, index, indent) => {\n        let mergedRowClassName;\n        if (typeof rowClassName === 'function') {\n            mergedRowClassName = classNames(rowClassName(record, index, indent));\n        }\n        else {\n            mergedRowClassName = classNames(rowClassName);\n        }\n        return classNames({\n            [`${prefixCls}-row-selected`]: selectedKeySet.has(getRowKey(record, index)),\n        }, mergedRowClassName);\n    };\n    // ========================== Expandable ==========================\n    const mergedExpandable = Object.assign({}, expandable);\n    // Customize expandable icon\n    mergedExpandable.expandIcon =\n        mergedExpandable.expandIcon || expandIcon || renderExpandIcon(tableLocale);\n    // Adjust expand icon index\n    if (expandType === 'nest') {\n        mergedExpandable.expandIconColumnIndex = rowSelection ? 1 : 0;\n    }\n    // Indent size\n    mergedExpandable.indentSize = mergedExpandable.indentSize || indentSize || 15;\n    // ============================ Render ============================\n    const transformColumns = React.useCallback((innerColumns) => {\n        return transformTitleColumns(transformSelectionColumns(transformFilterColumns(transformSorterColumns(innerColumns))));\n    }, [transformSorterColumns, transformFilterColumns, transformSelectionColumns]);\n    let topPaginationNode;\n    let bottomPaginationNode;\n    if (pagination !== false) {\n        let paginationSize;\n        if (mergedPagination.size) {\n            paginationSize = mergedPagination.size;\n        }\n        else {\n            paginationSize = size === 'small' || size === 'middle' ? 'small' : undefined;\n        }\n        const renderPagination = () => (<Pagination className={`${prefixCls}-pagination`} {...mergedPagination} size={paginationSize}/>);\n        switch (mergedPagination.position) {\n            case 'top':\n                topPaginationNode = renderPagination();\n                break;\n            case 'both':\n                topPaginationNode = renderPagination();\n                bottomPaginationNode = renderPagination();\n                break;\n            default:\n                bottomPaginationNode = renderPagination();\n        }\n    }\n    // >>>>>>>>> Spinning\n    let spinProps;\n    if (typeof loading === 'boolean') {\n        spinProps = {\n            spinning: loading,\n        };\n    }\n    else {\n        spinProps = loading;\n    }\n    const wrapperClassNames = classNames(`${prefixCls}-wrapper`, {\n        [`${prefixCls}-wrapper-rtl`]: direction === 'rtl',\n    });\n    return (<div className={wrapperClassNames} onTouchMove={e => {\n        e.preventDefault();\n    }}>\n      <Spin spinning={false} {...spinProps}>\n        {topPaginationNode}\n        <RcTable {...props} expandable={mergedExpandable} prefixCls={prefixCls} className={classNames(className, {\n        [`${prefixCls}-middle`]: size === 'middle',\n        [`${prefixCls}-small`]: size === 'small',\n        [`${prefixCls}-bordered`]: bordered,\n        [`${prefixCls}-rtl`]: direction === 'rtl',\n    })} data={pageData} rowKey={getRowKey} rowClassName={internalRowClassName} emptyText={renderEmpty('Table')} \n    // Internal\n    internalHooks={INTERNAL_HOOKS} internalRefs={internalRefs} transformColumns={transformColumns}/>\n        {bottomPaginationNode}\n      </Spin>\n    </div>);\n}\nTable.defaultProps = {\n    rowKey: 'key',\n};\nTable.SELECTION_ALL = SELECTION_ALL;\nTable.SELECTION_INVERT = SELECTION_INVERT;\nTable.Column = Column;\nTable.ColumnGroup = ColumnGroup;\nexport default Table;\n"],"file":"Table.js"}