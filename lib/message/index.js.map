{"version":3,"sources":["message/index.jsx"],"names":["defaultDuration","defaultTop","messageInstance","key","prefixCls","transitionName","getContainer","maxCount","getMessageInstance","callback","Notification","newInstance","style","top","instance","iconMap","info","InfoCircleFilled","success","CheckCircleFilled","error","CloseCircleFilled","warning","ExclamationCircleFilled","loading","LoadingOutlined","notice","args","duration","undefined","IconComponent","type","target","closePromise","Promise","resolve","onClose","content","icon","result","removeNotice","then","filled","rejected","promise","isArgsProps","api","open","config","options","destroy","forEach","warn"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport Notification from 'rc-notification';\nimport { LoadingOutlined, ExclamationCircleFilled, CloseCircleFilled, CheckCircleFilled, InfoCircleFilled, } from '@ant-design/icons';\nlet defaultDuration = 3;\nlet defaultTop;\nlet messageInstance;\nlet key = 1;\nlet prefixCls = 'ant-message';\nlet transitionName = 'move-up';\nlet getContainer;\nlet maxCount;\nfunction getMessageInstance(callback) {\n    if (messageInstance) {\n        callback(messageInstance);\n        return;\n    }\n    Notification.newInstance({\n        prefixCls,\n        transitionName,\n        style: { top: defaultTop },\n        getContainer,\n        maxCount,\n    }, (instance) => {\n        if (messageInstance) {\n            callback(messageInstance);\n            return;\n        }\n        messageInstance = instance;\n        callback(instance);\n    });\n}\nconst iconMap = {\n    info: InfoCircleFilled,\n    success: CheckCircleFilled,\n    error: CloseCircleFilled,\n    warning: ExclamationCircleFilled,\n    loading: LoadingOutlined,\n};\nfunction notice(args) {\n    const duration = args.duration !== undefined ? args.duration : defaultDuration;\n    const IconComponent = iconMap[args.type];\n    const target = args.key || key++;\n    const closePromise = new Promise(resolve => {\n        const callback = () => {\n            if (typeof args.onClose === 'function') {\n                args.onClose();\n            }\n            return resolve(true);\n        };\n        getMessageInstance(instance => {\n            instance.notice({\n                key: target,\n                duration,\n                style: {},\n                content: (<div className={`${prefixCls}-custom-content${args.type ? ` ${prefixCls}-${args.type}` : ''}`}>\n            {args.icon ? args.icon : <IconComponent />}\n            <span>{args.content}</span>\n          </div>),\n                onClose: callback,\n            });\n        });\n    });\n    const result = () => {\n        if (messageInstance) {\n            messageInstance.removeNotice(target);\n        }\n    };\n    result.then = (filled, rejected) => closePromise.then(filled, rejected);\n    result.promise = closePromise;\n    return result;\n}\nfunction isArgsProps(content) {\n    return typeof content === 'object' && !!content.content;\n}\nconst api = {\n    open: notice,\n    config(options) {\n        if (options.top !== undefined) {\n            defaultTop = options.top;\n            messageInstance = null; // delete messageInstance for new defaultTop\n        }\n        if (options.duration !== undefined) {\n            defaultDuration = options.duration;\n        }\n        if (options.prefixCls !== undefined) {\n            prefixCls = options.prefixCls;\n        }\n        if (options.getContainer !== undefined) {\n            getContainer = options.getContainer;\n        }\n        if (options.transitionName !== undefined) {\n            transitionName = options.transitionName;\n            messageInstance = null; // delete messageInstance for new transitionName\n        }\n        if (options.maxCount !== undefined) {\n            maxCount = options.maxCount;\n            messageInstance = null;\n        }\n    },\n    destroy() {\n        if (messageInstance) {\n            messageInstance.destroy();\n            messageInstance = null;\n        }\n    },\n};\n['success', 'info', 'warning', 'error', 'loading'].forEach(type => {\n    api[type] = (content, duration, onClose) => {\n        if (isArgsProps(content)) {\n            return api.open(Object.assign(Object.assign({}, content), { type }));\n        }\n        if (typeof duration === 'function') {\n            onClose = duration;\n            duration = undefined;\n        }\n        return api.open({ content, duration, type, onClose });\n    };\n});\napi.warn = api.warning;\nexport default api;\n"],"file":"index.js"}