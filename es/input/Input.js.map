{"version":3,"sources":["input/Input.jsx"],"names":["React","classNames","omit","tuple","ClearableLabeledInput","hasPrefixSuffix","ConfigConsumer","warning","InputSizes","fixControlledValue","value","resolveOnChange","target","e","onChange","event","type","Object","create","currentTarget","originalInputValue","getInputClassName","prefixCls","size","disabled","direction","Input","props","saveClearableInput","input","clearableInput","saveInput","handleReset","setValue","focus","renderInput","className","addonBefore","addonAfter","otherProps","handleChange","handleKeyDown","onPressEnter","onKeyDown","keyCode","renderComponent","getPrefixCls","state","customizePrefixCls","defaultValue","prevProps","document","activeElement","blur","select","callback","setState","nextProps","Component","defaultProps"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\nimport omit from 'omit.js';\nimport { tuple } from '../_util/type';\nimport ClearableLabeledInput, { hasPrefixSuffix } from './ClearableLabeledInput';\nimport { ConfigConsumer } from '../config-provider';\nimport warning from '../_util/warning';\nexport const InputSizes = tuple('small', 'default', 'large');\nexport function fixControlledValue(value) {\n    if (typeof value === 'undefined' || value === null) {\n        return '';\n    }\n    return value;\n}\nexport function resolveOnChange(target, e, onChange) {\n    if (onChange) {\n        let event = e;\n        if (e.type === 'click') {\n            // click clear icon\n            event = Object.create(e);\n            event.target = target;\n            event.currentTarget = target;\n            const originalInputValue = target.value;\n            // change target ref value cause e.target.value should be '' when clear input\n            target.value = '';\n            onChange(event);\n            // reset target ref value\n            target.value = originalInputValue;\n            return;\n        }\n        onChange(event);\n    }\n}\nexport function getInputClassName(prefixCls, size, disabled, direction) {\n    return classNames(prefixCls, {\n        [`${prefixCls}-sm`]: size === 'small',\n        [`${prefixCls}-lg`]: size === 'large',\n        [`${prefixCls}-disabled`]: disabled,\n        [`${prefixCls}-rtl`]: direction === 'rtl',\n    });\n}\nclass Input extends React.Component {\n    constructor(props) {\n        super(props);\n        this.direction = 'ltr';\n        this.saveClearableInput = (input) => {\n            this.clearableInput = input;\n        };\n        this.saveInput = (input) => {\n            this.input = input;\n        };\n        this.handleReset = (e) => {\n            this.setValue('', () => {\n                this.focus();\n            });\n            resolveOnChange(this.input, e, this.props.onChange);\n        };\n        this.renderInput = (prefixCls) => {\n            const { className, addonBefore, addonAfter, size, disabled } = this.props;\n            // Fix https://fb.me/react-unknown-prop\n            const otherProps = omit(this.props, [\n                'prefixCls',\n                'onPressEnter',\n                'addonBefore',\n                'addonAfter',\n                'prefix',\n                'suffix',\n                'allowClear',\n                // Input elements must be either controlled or uncontrolled,\n                // specify either the value prop, or the defaultValue prop, but not both.\n                'defaultValue',\n                'size',\n                'inputType',\n            ]);\n            return (<input {...otherProps} onChange={this.handleChange} onKeyDown={this.handleKeyDown} className={classNames(getInputClassName(prefixCls, size, disabled, this.direction), {\n                [className]: className && !addonBefore && !addonAfter,\n            })} ref={this.saveInput}/>);\n        };\n        this.handleChange = (e) => {\n            this.setValue(e.target.value);\n            resolveOnChange(this.input, e, this.props.onChange);\n        };\n        this.handleKeyDown = (e) => {\n            const { onPressEnter, onKeyDown } = this.props;\n            if (e.keyCode === 13 && onPressEnter) {\n                onPressEnter(e);\n            }\n            if (onKeyDown) {\n                onKeyDown(e);\n            }\n        };\n        this.renderComponent = ({ getPrefixCls, direction }) => {\n            const { value } = this.state;\n            const { prefixCls: customizePrefixCls } = this.props;\n            const prefixCls = getPrefixCls('input', customizePrefixCls);\n            this.direction = direction;\n            return (<ClearableLabeledInput {...this.props} prefixCls={prefixCls} inputType=\"input\" value={fixControlledValue(value)} element={this.renderInput(prefixCls)} handleReset={this.handleReset} ref={this.saveClearableInput} direction={direction}/>);\n        };\n        const value = typeof props.value === 'undefined' ? props.defaultValue : props.value;\n        this.state = {\n            value,\n        };\n    }\n    static getDerivedStateFromProps(nextProps) {\n        if ('value' in nextProps) {\n            return {\n                value: nextProps.value,\n            };\n        }\n        return null;\n    }\n    // Since polyfill `getSnapshotBeforeUpdate` need work with `componentDidUpdate`.\n    // We keep an empty function here.\n    componentDidUpdate() { }\n    getSnapshotBeforeUpdate(prevProps) {\n        if (hasPrefixSuffix(prevProps) !== hasPrefixSuffix(this.props)) {\n            warning(this.input !== document.activeElement, 'Input', `When Input is focused, dynamic add or remove prefix / suffix will make it lose focus caused by dom structure change. Read more: https://ant.design/components/input/#FAQ`);\n        }\n        return null;\n    }\n    focus() {\n        this.input.focus();\n    }\n    blur() {\n        this.input.blur();\n    }\n    select() {\n        this.input.select();\n    }\n    setValue(value, callback) {\n        if (!('value' in this.props)) {\n            this.setState({ value }, callback);\n        }\n    }\n    render() {\n        return <ConfigConsumer>{this.renderComponent}</ConfigConsumer>;\n    }\n}\nInput.defaultProps = {\n    type: 'text',\n};\nexport default Input;\n"],"file":"Input.js"}