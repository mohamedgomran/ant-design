{"version":3,"sources":["upload/UploadList.jsx"],"names":["React","Animate","classNames","LoadingOutlined","PaperClipOutlined","PictureTwoTone","FileTwoTone","EyeOutlined","DeleteOutlined","DownloadOutlined","previewImage","isImageUrl","Tooltip","Progress","ConfigConsumer","UploadList","arguments","handlePreview","file","e","onPreview","props","preventDefault","handleDownload","onDownload","url","window","open","handleClose","onRemove","renderUploadList","getPrefixCls","direction","customizePrefixCls","prefixCls","items","listType","showPreviewIcon","showRemoveIcon","showDownloadIcon","locale","progressAttr","list","map","progress","icon","status","uploading","thumbUrl","thumbnail","name","loadingProgress","percent","infoUploadingClass","linkProps","JSON","parse","removeIcon","removeFile","downloadIcon","downloadFile","downloadOrDelete","listItemNameClass","filter","x","length","preview","style","pointerEvents","opacity","previewIcon","undefined","previewFile","actions","message","response","error","statusText","uploadError","iconAndPreview","dom","listContainerNameClass","uid","listClassNames","animationDirection","forEach","document","FileReader","File","originFileObj","Blob","then","previewDataUrl","forceUpdate","Component","defaultProps","strokeWidth","showInfo"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport Animate from 'rc-animate';\nimport classNames from 'classnames';\nimport { LoadingOutlined, PaperClipOutlined, PictureTwoTone, FileTwoTone, EyeOutlined, DeleteOutlined, DownloadOutlined, } from '@ant-design/icons';\nimport { previewImage, isImageUrl } from './utils';\nimport Tooltip from '../tooltip';\nimport Progress from '../progress';\nimport { ConfigConsumer } from '../config-provider';\nexport default class UploadList extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.handlePreview = (file, e) => {\n            const { onPreview } = this.props;\n            if (!onPreview) {\n                return;\n            }\n            e.preventDefault();\n            return onPreview(file);\n        };\n        this.handleDownload = (file) => {\n            const { onDownload } = this.props;\n            if (typeof onDownload === 'function') {\n                onDownload(file);\n            }\n            else if (file.url) {\n                window.open(file.url);\n            }\n        };\n        this.handleClose = (file) => {\n            const { onRemove } = this.props;\n            if (onRemove) {\n                onRemove(file);\n            }\n        };\n        this.renderUploadList = ({ getPrefixCls, direction }) => {\n            const { prefixCls: customizePrefixCls, items = [], listType, showPreviewIcon, showRemoveIcon, showDownloadIcon, locale, progressAttr, } = this.props;\n            const prefixCls = getPrefixCls('upload', customizePrefixCls);\n            const list = items.map(file => {\n                let progress;\n                let icon = file.status === 'uploading' ? <LoadingOutlined /> : <PaperClipOutlined />;\n                if (listType === 'picture' || listType === 'picture-card') {\n                    if (listType === 'picture-card' && file.status === 'uploading') {\n                        icon = <div className={`${prefixCls}-list-item-uploading-text`}>{locale.uploading}</div>;\n                    }\n                    else if (!file.thumbUrl && !file.url) {\n                        icon = <PictureTwoTone className={`${prefixCls}-list-item-thumbnail`}/>;\n                    }\n                    else {\n                        const thumbnail = isImageUrl(file) ? (<img src={file.thumbUrl || file.url} alt={file.name} className={`${prefixCls}-list-item-image`}/>) : (<FileTwoTone className={`${prefixCls}-list-item-icon`}/>);\n                        icon = (<a className={`${prefixCls}-list-item-thumbnail`} onClick={e => this.handlePreview(file, e)} href={file.url || file.thumbUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n              {thumbnail}\n            </a>);\n                    }\n                }\n                if (file.status === 'uploading') {\n                    // show loading icon if upload progress listener is disabled\n                    const loadingProgress = 'percent' in file ? (<Progress type=\"line\" {...progressAttr} percent={file.percent}/>) : null;\n                    progress = (<div className={`${prefixCls}-list-item-progress`} key=\"progress\">\n            {loadingProgress}\n          </div>);\n                }\n                const infoUploadingClass = classNames({\n                    [`${prefixCls}-list-item`]: true,\n                    [`${prefixCls}-list-item-${file.status}`]: true,\n                    [`${prefixCls}-list-item-list-type-${listType}`]: true,\n                });\n                const linkProps = typeof file.linkProps === 'string' ? JSON.parse(file.linkProps) : file.linkProps;\n                const removeIcon = showRemoveIcon ? (<DeleteOutlined title={locale.removeFile} onClick={() => this.handleClose(file)}/>) : null;\n                const downloadIcon = showDownloadIcon && file.status === 'done' ? (<DownloadOutlined title={locale.downloadFile} onClick={() => this.handleDownload(file)}/>) : null;\n                const downloadOrDelete = listType !== 'picture-card' && (<span key=\"download-delete\" className={`${prefixCls}-list-item-card-actions ${listType === 'picture' ? 'picture' : ''}`}>\n          {downloadIcon && <a title={locale.downloadFile}>{downloadIcon}</a>}\n          {removeIcon && <a title={locale.removeFile}>{removeIcon}</a>}\n        </span>);\n                const listItemNameClass = classNames({\n                    [`${prefixCls}-list-item-name`]: true,\n                    [`${prefixCls}-list-item-name-icon-count-${[downloadIcon, removeIcon].filter(x => x).length}`]: true,\n                });\n                const preview = file.url\n                    ? [\n                        <a key=\"view\" target=\"_blank\" rel=\"noopener noreferrer\" className={listItemNameClass} title={file.name} {...linkProps} href={file.url} onClick={e => this.handlePreview(file, e)}>\n              {file.name}\n            </a>,\n                        downloadOrDelete,\n                    ]\n                    : [\n                        <span key=\"view\" className={listItemNameClass} onClick={e => this.handlePreview(file, e)} title={file.name}>\n              {file.name}\n            </span>,\n                        downloadOrDelete,\n                    ];\n                const style = {\n                    pointerEvents: 'none',\n                    opacity: 0.5,\n                };\n                const previewIcon = showPreviewIcon ? (<a href={file.url || file.thumbUrl} target=\"_blank\" rel=\"noopener noreferrer\" style={file.url || file.thumbUrl ? undefined : style} onClick={e => this.handlePreview(file, e)} title={locale.previewFile}>\n          <EyeOutlined />\n        </a>) : null;\n                const actions = listType === 'picture-card' && file.status !== 'uploading' && (<span className={`${prefixCls}-list-item-actions`}>\n          {previewIcon}\n          {file.status === 'done' && downloadIcon}\n          {removeIcon}\n        </span>);\n                let message;\n                if (file.response && typeof file.response === 'string') {\n                    message = file.response;\n                }\n                else {\n                    message = (file.error && file.error.statusText) || locale.uploadError;\n                }\n                const iconAndPreview = (<span>\n          {icon}\n          {preview}\n        </span>);\n                const dom = (<div className={infoUploadingClass}>\n          <div className={`${prefixCls}-list-item-info`}>{iconAndPreview}</div>\n          {actions}\n          <Animate transitionName=\"fade\" component=\"\">\n            {progress}\n          </Animate>\n        </div>);\n                const listContainerNameClass = classNames({\n                    [`${prefixCls}-list-picture-card-container`]: listType === 'picture-card',\n                });\n                return (<div key={file.uid} className={listContainerNameClass}>\n          {file.status === 'error' ? <Tooltip title={message}>{dom}</Tooltip> : <span>{dom}</span>}\n        </div>);\n            });\n            const listClassNames = classNames({\n                [`${prefixCls}-list`]: true,\n                [`${prefixCls}-list-${listType}`]: true,\n                [`${prefixCls}-list-rtl`]: direction === 'rtl',\n            });\n            const animationDirection = listType === 'picture-card' ? 'animate-inline' : 'animate';\n            return (<Animate transitionName={`${prefixCls}-${animationDirection}`} component=\"div\" className={listClassNames}>\n        {list}\n      </Animate>);\n        };\n    }\n    componentDidUpdate() {\n        const { listType, items, previewFile } = this.props;\n        if (listType !== 'picture' && listType !== 'picture-card') {\n            return;\n        }\n        (items || []).forEach(file => {\n            if (typeof document === 'undefined' ||\n                typeof window === 'undefined' ||\n                !window.FileReader ||\n                !window.File ||\n                !(file.originFileObj instanceof File || file.originFileObj instanceof Blob) ||\n                file.thumbUrl !== undefined) {\n                return;\n            }\n            file.thumbUrl = '';\n            if (previewFile) {\n                previewFile(file.originFileObj).then((previewDataUrl) => {\n                    // Need append '' to avoid dead loop\n                    file.thumbUrl = previewDataUrl || '';\n                    this.forceUpdate();\n                });\n            }\n        });\n    }\n    render() {\n        return <ConfigConsumer>{this.renderUploadList}</ConfigConsumer>;\n    }\n}\nUploadList.defaultProps = {\n    listType: 'text',\n    progressAttr: {\n        strokeWidth: 2,\n        showInfo: false,\n    },\n    showRemoveIcon: true,\n    showDownloadIcon: true,\n    showPreviewIcon: true,\n    previewFile: previewImage,\n};\n"],"file":"UploadList.js"}