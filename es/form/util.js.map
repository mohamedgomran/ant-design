{"version":3,"sources":["form/util.js"],"names":["React","useForm","useRcForm","scrollIntoView","useCacheErrors","errors","changeTrigger","cacheRef","useRef","visible","length","useEffect","timeout","setTimeout","prevVisible","current","newVisible","clearTimeout","toArray","candidate","undefined","Array","isArray","getFieldId","namePath","formName","mergedId","join","form","wrapForm","__INTERNAL__","scrollToField","name","fieldId","node","document","getElementById","scrollMode","block"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,OAAO,IAAIC,SAApB,QAAqC,eAArC;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA;;;;AAGA,OAAO,SAASC,cAAT,CAAwBC,MAAxB,EAAgCC,aAAhC,EAA+C;AAClD,MAAMC,QAAQ,GAAGP,KAAK,CAACQ,MAAN,CAAa;AAC1BH,IAAAA,MAAM,EAANA,MAD0B;AAE1BI,IAAAA,OAAO,EAAE,CAAC,CAACJ,MAAM,CAACK;AAFQ,GAAb,CAAjB;AAIAV,EAAAA,KAAK,CAACW,SAAN,CAAgB,YAAM;AAClB,QAAMC,OAAO,GAAGC,UAAU,CAAC,YAAM;AAC7B,UAAMC,WAAW,GAAGP,QAAQ,CAACQ,OAAT,CAAiBN,OAArC;AACA,UAAMO,UAAU,GAAG,CAAC,CAACX,MAAM,CAACK,MAA5B;AACAH,MAAAA,QAAQ,CAACQ,OAAT,CAAiBV,MAAjB,GAA0BA,MAA1B;AACAE,MAAAA,QAAQ,CAACQ,OAAT,CAAiBN,OAAjB,GAA2BO,UAA3B;;AACA,UAAIF,WAAW,KAAKE,UAApB,EAAgC;AAC5BV,QAAAA,aAAa,CAACU,UAAD,CAAb;AACH;AACJ,KARyB,EAQvB,EARuB,CAA1B;AASA,WAAO;AAAA,aAAMC,YAAY,CAACL,OAAD,CAAlB;AAAA,KAAP;AACH,GAXD,EAWG,CAACP,MAAD,CAXH;AAYA,SAAO,CAACE,QAAQ,CAACQ,OAAT,CAAiBN,OAAlB,EAA2BF,QAAQ,CAACQ,OAAT,CAAiBV,MAA5C,CAAP;AACH;AACD,OAAO,SAASa,OAAT,CAAiBC,SAAjB,EAA4B;AAC/B,MAAIA,SAAS,KAAKC,SAAd,IAA2BD,SAAS,KAAK,KAA7C,EACI,OAAO,EAAP;AACJ,SAAOE,KAAK,CAACC,OAAN,CAAcH,SAAd,IAA2BA,SAA3B,GAAuC,CAACA,SAAD,CAA9C;AACH;AACD,OAAO,SAASI,UAAT,CAAoBC,QAApB,EAA8BC,QAA9B,EAAwC;AAC3C,MAAI,CAACD,QAAQ,CAACd,MAAd,EACI,OAAOU,SAAP;AACJ,MAAMM,QAAQ,GAAGF,QAAQ,CAACG,IAAT,CAAc,GAAd,CAAjB;AACA,SAAOF,QAAQ,aAAMA,QAAN,cAAkBC,QAAlB,IAA+BA,QAA9C;AACH;AACD,OAAO,SAASzB,OAAT,CAAiB2B,IAAjB,EAAuB;AAC1B,MAAMC,QAAQ,GAAGD,IAAI,IAAI,SAAc,SAAc,EAAd,EAAkB1B,SAAS,GAAG,CAAH,CAA3B,CAAd,EAAiD;AAAE4B,IAAAA,YAAY,EAAE,EAAhB;AAAoBC,IAAAA,aAAa,EAAE,uBAAAC,IAAI,EAAI;AAC7G,UAAMR,QAAQ,GAAGN,OAAO,CAACc,IAAD,CAAxB;AACA,UAAMC,OAAO,GAAGV,UAAU,CAACC,QAAD,EAAWK,QAAQ,CAACC,YAAT,CAAsBE,IAAjC,CAA1B;AACA,UAAME,IAAI,GAAGD,OAAO,GAAGE,QAAQ,CAACC,cAAT,CAAwBH,OAAxB,CAAH,GAAsC,IAA1D;;AACA,UAAIC,IAAJ,EAAU;AACN/B,QAAAA,cAAc,CAAC+B,IAAD,EAAO;AACjBG,UAAAA,UAAU,EAAE,WADK;AAEjBC,UAAAA,KAAK,EAAE;AAFU,SAAP,CAAd;AAIH;AACJ;AAVqE,GAAjD,CAAzB;;AAWA,SAAO,CAACT,QAAD,CAAP;AACH","sourcesContent":["import * as React from 'react';\nimport { useForm as useRcForm } from 'rc-field-form';\nimport scrollIntoView from 'scroll-into-view-if-needed';\n/**\n * Always debounce error to avoid [error -> null -> error] blink\n */\nexport function useCacheErrors(errors, changeTrigger) {\n    const cacheRef = React.useRef({\n        errors,\n        visible: !!errors.length,\n    });\n    React.useEffect(() => {\n        const timeout = setTimeout(() => {\n            const prevVisible = cacheRef.current.visible;\n            const newVisible = !!errors.length;\n            cacheRef.current.errors = errors;\n            cacheRef.current.visible = newVisible;\n            if (prevVisible !== newVisible) {\n                changeTrigger(newVisible);\n            }\n        }, 10);\n        return () => clearTimeout(timeout);\n    }, [errors]);\n    return [cacheRef.current.visible, cacheRef.current.errors];\n}\nexport function toArray(candidate) {\n    if (candidate === undefined || candidate === false)\n        return [];\n    return Array.isArray(candidate) ? candidate : [candidate];\n}\nexport function getFieldId(namePath, formName) {\n    if (!namePath.length)\n        return undefined;\n    const mergedId = namePath.join('_');\n    return formName ? `${formName}_${mergedId}` : mergedId;\n}\nexport function useForm(form) {\n    const wrapForm = form || Object.assign(Object.assign({}, useRcForm()[0]), { __INTERNAL__: {}, scrollToField: name => {\n            const namePath = toArray(name);\n            const fieldId = getFieldId(namePath, wrapForm.__INTERNAL__.name);\n            const node = fieldId ? document.getElementById(fieldId) : null;\n            if (node) {\n                scrollIntoView(node, {\n                    scrollMode: 'if-needed',\n                    block: 'nearest',\n                });\n            }\n        } });\n    return [wrapForm];\n}\n"],"file":"util.js"}